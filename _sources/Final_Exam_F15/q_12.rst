.. _Final_Exam_F15/q_12:

Final Exam Fall 2015 - Question 12
------------------------------------


.. activecode:: Final_Exam_F15_q_12
   :language: python
   :autograde: unittest
   :chatcodes:
   :practice: T
   :topics: Final_Exam_F15/q_12

   Define a function **encrypt**, that takes a string as input and returns a new string.
   The function should include the following:

   - First use map or a list comprehension to generate a list of the results of running rotate_char on each letter in the string.
   - Then use the string method ``join`` to turn the list of characters into a string.
   - Return that string.
   - Your function should pass the tests at the bottom of the page. Note the parameters that are passed in the calls to encrypt.

   ~~~~
   def rotate_char(c, positions = 1, alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"):
      try:
         idx = alphabet.index(c)
         rotated_idx = (idx + positions) % len(alphabet)
         return alphabet[rotated_idx]
      except:
         print ("{} is not in {}".format(c, alphabet))
         return c



   from unittest.gui import TestCaseGui

   class myTests(TestCaseGui):

     def testOne(self):
         self.assertEqual(encrypt("HAL", 1), "IBM", "Testing the value of encrypt('HAL', 1).")
         self.assertEqual(encrypt("IBM", -1), "HAL", "Testing the value of encrypt('IBM', -1).")

   myTests().main()

   =====

   from unittest.gui import TestCaseGui

   class myTests(TestCaseGui):

     def testOne(self):
         self.assertEqual(encrypt("HAL", 1), "IBM", "Testing the value of encrypt('HAL', 1).")
         self.assertEqual(encrypt("IBM", -1), "HAL", "Testing the value of encrypt('IBM', -1).")

   myTests().main()
